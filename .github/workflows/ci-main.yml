# This is a basic workflow to help you get started with Actions

name: CI-main

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    permissions:
      contents: 'write'
      id-token: 'write'
      actions: 'write'
      packages: 'write'
      pull-requests: 'write'    
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'      
      - id: 'get-credentials'
        uses: 'google-github-actions/get-gke-credentials@v0'
        with:
          cluster_name: '${{ secrets.GKE_CLUSTERNAME }}'
          location: '${{ secrets.GKE_ZONE  }}'   
      - name: Get Chart Version and App Version from helm 
        uses: CumulusDS/get-yaml-paths-action@v0.1.0
        id: get_chart_yaml_values
        with:
          file: charts/Chart.yaml
          appversion: appVersion
          chartversion: version
      - name: Chart | Push
        uses: appany/helm-oci-chart-releaser@v0.3.0
        with:
          name: ${{ github.event.repository.name }}
          repository: ${{ github.repository_owner }}/stage
          tag: ${{ steps.get_chart_yaml_values.outputs.chartversion  }}-RELEASE
          path: charts/ # Default charts/{name}
          registry: ghcr.io
          registry_username: ${{ github.actor }}
          registry_password: ${{ secrets.GITHUB_TOKEN }}      
      - name: Setup flux on prod cluster
        run: |
         cd charts
         helm upgrade --install datainfra-fluxcd . -n flux --create-namespace
      - name: Check pods
        run: |
         kubectl rollout status deployment kustomize-controller -n flux
         kubectl rollout status deployment helm-controller -n flux
         kubectl rollout status deployment notification-controller -n flux
         kubectl rollout status deployment source-controller -n flux
      - name: Auto Merge Integ Branch -> master
        uses: devmasx/merge-branch@master
        with:
          type: now
          from_branch: integ  
          target_branch: main
          github_token: ${{ github.token }}           
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "${{ steps.get_chart_yaml_values.outputs.chartversion  }}-RELEASE"
          prerelease: true
          title: "PreProd Build"
      
         
#      - name: Check Output Parameters
#        run: |
#          echo "Got tag name ${{ steps.release.outputs.tag_name }}"
#          echo "Got release version ${{ steps.release.outputs.version }}"
          
      
